{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as Location from 'expo-location';\nexport default function locationMap() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              console.log(location, 'locationlocation');\n              setLocation(location);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, location ? React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    maxZoomLevel: 20,\n    minZoomLevel: 15\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude\n    },\n    title: \"Saylani Gulshan Campus\"\n  })) : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["/home/hamza/Desktop/AbdulSaboor/ReactNativeDrawer/src/components/maps/location.jsx"],"names":["React","useState","useEffect","MapView","Marker","Location","locationMap","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","console","log","styles","container","map","latitude","coords","longitude","latitudeDelta","longitudeDelta","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;;;;;AAGA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,kBAAgCL,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCP,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACAR,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BG,QAAQ,CAACM,iCAAT,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;;AAAA,oBAEOA,MAAM,KAAK,SAFlB;AAAA;AAAA;AAAA;;AAGOF,cAAAA,WAAW,CAAC,0CAAD,CAAX;AAHP;;AAAA;AAAA;AAAA,+CAOwBL,QAAQ,CAACQ,uBAAT,CAAiC,EAAjC,CAPxB;;AAAA;AAOON,cAAAA,QAPP;AAQGO,cAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsB,kBAAtB;AACAC,cAAAA,WAAW,CAACD,QAAD,CAAX;;AATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAWH,GAZQ,EAYN,EAZM,CAAT;AAeA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC;AAApB,KACKV,QAAQ,GACL,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAES,MAAM,CAACE,GAAvB;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,QAAQ,EAAEZ,QAAQ,CAACa,MAAT,CAAgBD,QADf;AAEXE,MAAAA,SAAS,EAAEd,QAAQ,CAACa,MAAT,CAAgBC,SAFhB;AAGXC,MAAAA,aAAa,EAAE,MAHJ;AAIXC,MAAAA,cAAc,EAAE;AAJL,KADnB;AAOI,IAAA,YAAY,EAAE,EAPlB;AAQI,IAAA,YAAY,EAAE;AARlB,KAUI,oBAAC,MAAD;AACI,IAAA,UAAU,EAAE;AACRJ,MAAAA,QAAQ,EAAEZ,QAAQ,CAACa,MAAT,CAAgBD,QADlB;AAERE,MAAAA,SAAS,EAAEd,QAAQ,CAACa,MAAT,CAAgBC;AAFnB,KADhB;AAKI,IAAA,KAAK,EAAE;AALX,IAVJ,CADK,GAmBQ,IApBrB,CADJ;AA2BH;AAED,IAAML,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BX,EAAAA,GAAG,EAAE;AACDY,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAD/B;AAEDG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAFhC;AAPwB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\n\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\nimport * as Location from 'expo-location';\n\nexport default function locationMap() {\n    const [location, setLocation] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(null);\n    useEffect(() => {\n        (async () => {\n            let { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                setErrorMsg('Permission to access location was denied');\n                return;\n            }\n\n            let location = await Location.getCurrentPositionAsync({});\n            console.log(location, 'locationlocation')\n            setLocation(location);\n        })();\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            {location ?\n                <MapView style={styles.map}\n                    initialRegion={{\n                        latitude: location.coords.latitude,\n                        longitude: location.coords.longitude,\n                        latitudeDelta: 0.0922,\n                        longitudeDelta: 0.0421,\n                    }}\n                    maxZoomLevel={20}\n                    minZoomLevel={15}\n                >\n                    <Marker\n                        coordinate={{\n                            latitude: location.coords.latitude,\n                            longitude: location.coords.longitude,\n                        }}\n                        title={\"Saylani Gulshan Campus\"}\n                    />\n\n                </MapView> : null\n\n            }\n\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    map: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n    },\n});"]},"metadata":{},"sourceType":"module"}