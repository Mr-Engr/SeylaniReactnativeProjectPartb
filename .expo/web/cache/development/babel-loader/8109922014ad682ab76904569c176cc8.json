{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { GlobalContext } from \"../../context/context\";\nexport default function LocationMapComp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(GlobalContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var food = [{\n    \"branch_name\": \"Aliabad\",\n    \"latitude\": 24.9200172,\n    \"longitude\": 67.0612345\n  }, {\n    \"branch_name\": \"Numaish chowrangi\",\n    \"latitude\": 24.8732834,\n    \"longitude\": 67.0337457\n  }, {\n    \"branch_name\": \"Saylani house phase 2\",\n    \"latitude\": 24.8278999,\n    \"longitude\": 67.0688257\n  }, {\n    \"branch_name\": \"Touheed commercial\",\n    \"latitude\": 24.8073692,\n    \"longitude\": 67.0357446\n  }, {\n    \"branch_name\": \"Sehar Commercial\",\n    \"latitude\": 24.8138924,\n    \"longitude\": 67.0677652\n  }, {\n    \"branch_name\": \"Jinnah avenue\",\n    \"latitude\": 24.8949528,\n    \"longitude\": 67.1767206\n  }, {\n    \"branch_name\": \"Johar chowrangi\",\n    \"latitude\": 24.9132328,\n    \"longitude\": 67.1246195\n  }, {\n    \"branch_name\": \"Johar chowrangi 2\",\n    \"latitude\": 24.9100704,\n    \"longitude\": 67.1208811\n  }, {\n    \"branch_name\": \"Hill park\",\n    \"latitude\": 24.8673515,\n    \"longitude\": 67.0724497\n  }];\n\n  var _useState = useState({\n    latitude: state.latitude,\n    longitude: state.longitude,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapRegion = _useState2[0],\n      setmapRegion = _useState2[1];\n\n  var cities = [[\"Aliabad\", 24.9200172, 67.0612345], [\"Numaish chowrangi\", 24.8732834, 67.0337457], [\"Saylani house phase 2\", 24.8278999, 67.0688257], [\"Touheed commercial\", 24.8073692, 67.0357446], [\"Sehar Commercial\", 24.8138924, 67.0677652], [\"Jinnah avenue\", 24.8949528, 67.1767206], [\"Johar chowrangi\", 24.9132328, 67.1246195], [\"Johar chowrangi 2\", 24.9100704, 67.1208811], [\"Hill park\", 24.8673515, 67.0724497]];\n\n  var deg2Rad = function deg2Rad(deg) {\n    return deg * Math.PI / 180;\n  };\n\n  var pythagorasEquirectangular = function pythagorasEquirectangular(lat1, lon1, lat2, lon2, lat3, lon3, lat4, lon4, lat5, lon5, lat6, lon6, lat7, lon7, lat8, lon8, lat9, lon9) {\n    lat1 = deg2Rad(lat1);\n    lat2 = deg2Rad(lat2);\n    lon1 = deg2Rad(lon1);\n    lon2 = deg2Rad(lon2);\n    lat3 = deg2Rad(lat3);\n    lat4 = deg2Rad(lat4);\n    lon3 = deg2Rad(lon3);\n    lon4 = deg2Rad(lon4);\n    lat5 = deg2Rad(lat5);\n    lat6 = deg2Rad(lat6);\n    lon5 = deg2Rad(lon5);\n    lon6 = deg2Rad(lon6);\n    lat7 = deg2Rad(lat7);\n    lat8 = deg2Rad(lat8);\n    lon7 = deg2Rad(lon7);\n    lon8 = deg2Rad(lon8);\n    lat9 = deg2Rad(lat9);\n    lat9 = deg2Rad(lat9);\n    var R = 6371;\n    var x = (lon2 - lon1) * Math.cos((lat1 + lat2) / 2);\n    var y = lat2 - lat1;\n    var d = Math.sqrt(x * x + y * y) * R;\n    return d;\n  };\n\n  var nearestCity = function nearestCity(latitude, longitude) {\n    var mindif = 28.0000000;\n    var closest;\n\n    for (index = 0; index < cities.length; ++index) {\n      var dif = pythagorasEquirectangular(latitude, longitude, cities[index][1], cities[index][2], cities[index][3], cities[index][4], cities[index][5], cities[index][6], cities[index][7], cities[index][8], cities[index][9]);\n\n      if (dif < mindif) {\n        closest = index;\n        mindif = dif;\n        console.log(dif);\n      }\n\n      return cities[closest];\n    }\n  };\n\n  useEffect(function () {\n    var nearestOne = nearestCity(state.latitude, state.longitude);\n\n    if (nearestOne) {\n      navigation.navigate(\"Home\");\n      dispatch({\n        type: \"NEARESTONE\",\n        payload: {\n          nearestOne: nearestOne\n        }\n      });\n      console.log(\"redirect\");\n    } else {\n      dispatch({\n        type: \"NEARESTONE\",\n        payload: ''\n      });\n    }\n  }, [state.activeUser]);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: mapRegion\n  }, React.createElement(Marker, {\n    coordinate: mapRegion,\n    title: \"Your Location\"\n  }), food.map(function (item, index) {\n    var obj = {\n      latitude: item.latitude,\n      longitude: item.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    };\n    var names = {\n      branchName: item.branch_name\n    };\n    return React.createElement(Marker, {\n      coordinate: obj,\n      title: names.branchName\n    });\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["D:/SeylaniWelfareTrust_201221/ReactNativeDrawer-main/ReactNativeDrawer-main/src/components/maps/location.jsx"],"names":["React","useState","useEffect","useContext","MapView","Marker","GlobalContext","LocationMapComp","navigation","state","dispatch","food","latitude","longitude","latitudeDelta","longitudeDelta","mapRegion","setmapRegion","cities","deg2Rad","deg","Math","PI","pythagorasEquirectangular","lat1","lon1","lat2","lon2","lat3","lon3","lat4","lon4","lat5","lon5","lat6","lon6","lat7","lon7","lat8","lon8","lat9","lon9","R","x","cos","y","d","sqrt","nearestCity","mindif","closest","index","length","dif","console","log","nearestOne","navigate","type","payload","activeUser","styles","container","map","item","obj","names","branchName","branch_name","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useContext } from 'react';\nimport MapView , {Marker} from 'react-native-maps';\nimport { StyleSheet, Text, View, Dimensions  } from 'react-native';\nimport { GlobalContext } from '../../context/context';\n\n\nexport default function LocationMapComp({navigation}) {\n  let {state, dispatch} = useContext(GlobalContext);\n\n  const food = [\n    {\n        \"branch_name\": \"Aliabad\",\n        \"latitude\": 24.9200172,\n        \"longitude\": 67.0612345\n    },\n    {\n        \"branch_name\": \"Numaish chowrangi\",\n        \"latitude\": 24.8732834,\n        \"longitude\": 67.0337457\n    },\n    {\n        \"branch_name\": \"Saylani house phase 2\",\n        \"latitude\": 24.8278999,\n        \"longitude\": 67.0688257\n    },\n    {\n        \"branch_name\": \"Touheed commercial\",\n        \"latitude\": 24.8073692,\n        \"longitude\": 67.0357446\n    },\n    {\n        \"branch_name\": \"Sehar Commercial\",\n        \"latitude\": 24.8138924,\n        \"longitude\": 67.0677652\n    },\n    {\n        \"branch_name\": \"Jinnah avenue\",\n        \"latitude\": 24.8949528,\n        \"longitude\": 67.1767206\n    },\n    {\n        \"branch_name\": \"Johar chowrangi\",\n        \"latitude\": 24.9132328,\n        \"longitude\": 67.1246195\n    },\n    {\n        \"branch_name\": \"Johar chowrangi 2\",\n        \"latitude\": 24.9100704,\n        \"longitude\": 67.1208811\n    },\n    {\n        \"branch_name\": \"Hill park\",\n        \"latitude\": 24.8673515,\n        \"longitude\": 67.0724497\n    }\n]\n\n\n  const [mapRegion, setmapRegion] = useState({\n    latitude: state.latitude,\n    longitude: state.longitude,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421,\n  });\n\n\n\n  const cities = [\n    [\"Aliabad\" ,24.9200172  ,67.0612345],\n    [\"Numaish chowrangi\" ,24.8732834 ,67.0337457 ],\n    [\"Saylani house phase 2\" , 24.8278999 ,67.0688257],\n    [\"Touheed commercial\" , 24.8073692 ,67.0357446] ,\n    [\"Sehar Commercial\" , 24.8138924 , 67.0677652],\n    [\"Jinnah avenue\" , 24.8949528 , 67.1767206],\n    [\"Johar chowrangi\" ,24.9132328 ,67.1246195 ],\n    [\"Johar chowrangi 2\" ,24.9100704 ,67.1208811],\n    [\"Hill park\" , 24.8673515 ,67.0724497]\n   ];\n   \n   const deg2Rad = (deg) => {\n     return deg * Math.PI / 180;\n   }\n   \n   const pythagorasEquirectangular = (lat1, lon1, lat2, lon2 , lat3, lon3, lat4, lon4, lat5, lon5, lat6, lon6 , lat7, lon7, lat8, lon8 , lat9, lon9) => {\n     lat1 = deg2Rad(lat1);\n     lat2 = deg2Rad(lat2);\n     lon1 = deg2Rad(lon1);\n     lon2 = deg2Rad(lon2);\n\n     lat3 = deg2Rad(lat3);\n     lat4 = deg2Rad(lat4);\n     lon3 = deg2Rad(lon3);\n     lon4 = deg2Rad(lon4);\n     lat5 = deg2Rad(lat5);\n     lat6 = deg2Rad(lat6);\n     lon5 = deg2Rad(lon5);\n     lon6 = deg2Rad(lon6);\n     lat7 = deg2Rad(lat7);\n     lat8 = deg2Rad(lat8);\n     lon7 = deg2Rad(lon7);\n     lon8 = deg2Rad(lon8);\n     lat9 = deg2Rad(lat9);\n     lat9 = deg2Rad(lat9);\n\n     const R = 6371;\n     const x = (lon2 - lon1) * Math.cos((lat1 + lat2) / 2);\n     const y = (lat2 - lat1);\n     const d = Math.sqrt(x * x + y * y) * R;\n     return d;\n   }\n   const nearestCity = (latitude, longitude) => {\n    let mindif = 28.0000000;\n    let closest;\n   \n    for (index = 0; index < cities.length; ++index) {\n     const dif = pythagorasEquirectangular(latitude, longitude, cities[index][1], \n       cities[index][2],cities[index][3], cities[index][4],cities[index][5], cities[index][6],cities[index][7], cities[index][8], cities[index][9]   );\n       if (dif < mindif) {\n       closest = index;\n       mindif = dif;\n       console.log(dif  )\n    }\n    return cities[closest]\n   }\n  }\n\n   useEffect(()=>{\n    let nearestOne = nearestCity(state.latitude,state.longitude);\n      \n    if(nearestOne){\n      navigation.navigate(\"Home\")\n      dispatch({type : \"NEARESTONE\" , payload : {nearestOne}})\n      console.log(\"redirect\")\n    }else{\n      dispatch({type : \"NEARESTONE\" , payload : ''})\n    }\n      \n  \n   },[state.activeUser])\n   \n\n\n\n  return (\n    <View style={styles.container}>\n      <MapView style={styles.map} region={mapRegion} >\n        <Marker coordinate={mapRegion} title='Your Location' />\n        {\n          food.map((item , index)=>{\n            let obj = {\n              latitude: item.latitude,\n              longitude:  item.longitude,\n              latitudeDelta: 0.0922,\n              longitudeDelta: 0.0421,\n            }\n            let names = {\n              branchName : item.branch_name\n            }\n            return (\n              <Marker coordinate={obj} title={names.branchName} />\n            )\n          })\n        }\n      </MapView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}