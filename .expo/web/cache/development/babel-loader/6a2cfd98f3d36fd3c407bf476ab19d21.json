{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\nimport { auth, createUserWithEmailAndPassword, db, setDoc, doc } from \"../../configs/firebase\";\nimport LogoKhanaSabkliye from \"../../images/LogoKhanaSabkliye.png\";\nimport { Entypo } from '@expo/vector-icons';\n\nvar SignUpPublic = function SignUpPublic(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    Inter_900Black: Inter_900Black\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      age = _useState6[0],\n      setAge = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  function signUpFunc() {\n    var _await$createUserWith, user, userObj, dataRef, savedData;\n\n    return _regeneratorRuntime.async(function signUpFunc$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password));\n\n          case 3:\n            _await$createUserWith = _context.sent;\n            user = _await$createUserWith.user;\n\n            if (!user) {\n              _context.next = 12;\n              break;\n            }\n\n            userObj = {\n              name: name,\n              age: age,\n              email: user.email,\n              uid: user.uid,\n              createdat: user.uid,\n              role: \"public\"\n            };\n            dataRef = doc(db, \"users\", user.uid);\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(setDoc(dataRef, userObj));\n\n          case 10:\n            savedData = _context.sent;\n            navigation.navigate(\"home\");\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error : \", _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.view3\n  }, React.createElement(Image, {\n    source: LogoKhanaSabkliye,\n    style: styles.img\n  })), React.createElement(View, {\n    style: styles.view1\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    style: styles.input,\n    value: email,\n    onChangeText: function onChangeText(e) {\n      setEmail(e);\n    }\n  })), React.createElement(View, {\n    style: styles.view2\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    style: styles.input,\n    value: password,\n    onChangeText: function onChangeText(e) {\n      setPassword(e);\n    }\n  })), React.createElement(View, {\n    style: styles.btnDiv\n  }, React.createElement(TouchableOpacity, {\n    onPress: loginFunc\n  }, React.createElement(Ionicons, {\n    name: \"md-checkmark-circle\",\n    size: 70,\n    color: \"green\"\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  view3: {\n    backgroundColor: '#ffffff',\n    paddingTop: 10,\n    paddingLeft: 62.2,\n    paddingRight: 62.2\n  },\n  view2: {\n    backgroundColor: '#ffffff',\n    paddingBottom: 30\n  },\n  view1: {\n    backgroundColor: '#ffffff'\n  },\n  input: {\n    width: 250,\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderColor: 'rgb(195, 195, 195)',\n    padding: 10,\n    borderRadius: 5\n  },\n  img: {\n    width: 150,\n    height: 100\n  },\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#dedfe0',\n    paddingBottom: 100\n  },\n  btnDiv: {\n    position: 'relative',\n    top: 150,\n    left: 110\n  }\n});\nexport default SignUpPublic;","map":{"version":3,"sources":["E:/SMIT WORK/React Js/ReactNativeDrawer/src/Screens/public-sign-up/sign.jsx"],"names":["React","useState","useFonts","Inter_900Black","auth","createUserWithEmailAndPassword","db","setDoc","doc","LogoKhanaSabkliye","Entypo","SignUpPublic","navigation","fontsLoaded","email","setEmail","password","setPassword","age","setAge","name","setName","signUpFunc","user","userObj","uid","createdat","role","dataRef","savedData","navigate","console","log","styles","container","view3","img","view1","input","e","view2","btnDiv","loginFunc","StyleSheet","create","backgroundColor","paddingTop","paddingLeft","paddingRight","paddingBottom","width","height","margin","borderWidth","borderColor","padding","borderRadius","flex","justifyContent","alignItems","position","top","left"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View , Text , StyleSheet ,TextInput , TouchableOpacity , Image} from 'react-native';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\nimport { auth , createUserWithEmailAndPassword ,db ,setDoc, doc } from '../../configs/firebase';\r\nimport LogoKhanaSabkliye from '../../images/LogoKhanaSabkliye.png';\r\nimport { Entypo } from '@expo/vector-icons'; \r\n\r\nconst SignUpPublic = ({navigation}) => {\r\n    let [fontsLoaded] = useFonts({\r\n        Inter_900Black,\r\n      });\r\n    let [email , setEmail] = useState('');\r\n    let [password , setPassword] = useState('');\r\n    let [age , setAge] = useState('');\r\n    let [name , setName] = useState('');\r\n    async function signUpFunc(){\r\n        try {\r\n            let {user} = await createUserWithEmailAndPassword(auth, email , password)\r\n            if(user){\r\n                let userObj = {\r\n                    name,\r\n                    age,\r\n                    email : user.email,\r\n                    uid : user.uid,\r\n                    createdat : user.uid,\r\n                    role : \"public\"\r\n\r\n                }\r\n                let dataRef = doc(db , \"users\" , user.uid)\r\n                let savedData = await setDoc(dataRef, userObj) \r\n                navigation.navigate(\"home\")\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error : \" , error)\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={styles.view3}>\r\n            <Image source={LogoKhanaSabkliye} style={styles.img} />\r\n        </View>\r\n        <View style={styles.view1}>\r\n            <TextInput placeholder=\"Email\" style={styles.input} value={email} onChangeText={(e)=>{setEmail(e)}}  />\r\n        </View>\r\n        <View style={styles.view2}>\r\n            <TextInput placeholder=\"Password\" secureTextEntry={true} style={styles.input} value={password} onChangeText={(e)=>{setPassword(e)}}  />\r\n        </View>\r\n    <View style={styles.btnDiv}>\r\n    <TouchableOpacity onPress={loginFunc}><Ionicons name=\"md-checkmark-circle\" size={70} color=\"green\" /></TouchableOpacity>\r\n    </View>\r\n    </View>\r\n        // <View style={styles.container}>\r\n        //     <View style={styles.view1}>\r\n        //         <TextInput placeholder=\"Email\" style={styles.input} value={email} onChangeText={(e)=>{setEmail(e)}}  />\r\n        //     </View>\r\n        //     <View style={styles.view2}>\r\n        //         <TextInput placeholder=\"name\" style={styles.input} value={name} onChangeText={(e)=>{setName(e)}}  />\r\n        //     </View>\r\n        //     <View style={styles.view3}>\r\n        //         <TextInput placeholder=\"age\" style={styles.input} value={age} onChangeText={(e)=>{setAge(e)}}  />\r\n        //     </View>\r\n        //     <View style={styles.view4}>\r\n        //         <TextInput placeholder=\"Password\" secureTextEntry={true} style={styles.input} value={password} onChangeText={(e)=>{setPassword(e)}}  />\r\n        //     </View>\r\n        //     <View style={styles.btnDiv}>\r\n        //         <TouchableOpacity style={styles.touchableBtn} onPress={signUpFunc}><Text style={{color:\"white\"}}>Sign in</Text></TouchableOpacity>\r\n        //     </View>\r\n        // </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    view3 : {\r\n        backgroundColor :'#ffffff',\r\n        paddingTop:10,\r\n        paddingLeft:62.2,\r\n        paddingRight:62.2,\r\n    },\r\n    view2 : {\r\n        backgroundColor :'#ffffff',\r\n        paddingBottom:30,\r\n    },\r\n    view1 : {\r\n        backgroundColor :'#ffffff'\r\n    },\r\n    input : {\r\n        width:250,\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        borderColor : 'rgb(195, 195, 195)',\r\n        padding: 10,\r\n        borderRadius : 5,\r\n\r\n    },\r\n\r\n    img: {\r\n        width:150,\r\n        height:100,\r\n    },\r\n\r\n    container : {\r\n        width:\"100%\",\r\n        height:\"100%\",\r\n        flex:1,\r\n        justifyContent : 'center',\r\n        alignItems:'center',\r\n        backgroundColor:'#dedfe0',\r\n        paddingBottom:100\r\n    },\r\n    btnDiv : {\r\n        position : 'relative',\r\n        top : 150,\r\n        left : 110,\r\n    },\r\n\r\n\r\n})\r\n\r\n\r\nexport default SignUpPublic;\r\n"]},"metadata":{},"sourceType":"module"}