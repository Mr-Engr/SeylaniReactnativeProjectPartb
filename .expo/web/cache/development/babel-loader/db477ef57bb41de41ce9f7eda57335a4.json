{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\nimport { auth, signInWithEmailAndPassword } from \"../../configs/firebase\";\n\nvar MainLogin = function MainLogin(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    Inter_900Black: Inter_900Black\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function loginFunc() {\n    var _await$signInWithEmai, user;\n\n    return _regeneratorRuntime.async(function loginFunc$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password));\n\n          case 3:\n            _await$signInWithEmai = _context.sent;\n            user = _await$signInWithEmai.user;\n\n            if (user) {\n              navigation.navigate(\"home\");\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error : \", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.cont1\n  }, React.createElement(View, {\n    style: styles.view1\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    style: styles.input,\n    value: email,\n    onChangeText: function onChangeText(e) {\n      setEmail(e);\n    }\n  })), React.createElement(View, {\n    style: styles.view2\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    style: styles.input,\n    value: password,\n    onChangeText: function onChangeText(e) {\n      setPassword(e);\n    }\n  })), React.createElement(View, {\n    style: styles.btnDiv\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchableBtn,\n    onPress: loginFunc\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    }\n  }, \"Log in\")))));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: 250,\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderColor: 'rgb(195, 195, 195)',\n    padding: 10,\n    borderRadius: 5\n  },\n  btnDiv: {\n    width: \"100%\",\n    height: 40,\n    color: 'black'\n  },\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default MainLogin;","map":{"version":3,"sources":["E:/SMIT WORK/React Js/ReactNativeDrawer/src/Screens/login/login.jsx"],"names":["React","useContext","useState","useFonts","Inter_900Black","auth","signInWithEmailAndPassword","MainLogin","navigation","fontsLoaded","email","setEmail","password","setPassword","loginFunc","user","navigate","console","log","styles","container","cont1","view1","input","e","view2","btnDiv","touchableBtn","color","StyleSheet","create","width","height","margin","borderWidth","borderColor","padding","borderRadius","flex","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;;AAEA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,0BAAzC;AACA,SAASC,IAAT,EAAgBC,0BAAhB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAChC,kBAAoBL,QAAQ,CAAC;AACzBC,IAAAA,cAAc,EAAdA;AADyB,GAAD,CAA5B;AAAA;AAAA,MAAKK,WAAL;;AAGA,kBAAyBP,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAKQ,KAAL;AAAA,MAAaC,QAAb;;AACA,mBAA+BT,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAKU,QAAL;AAAA,MAAgBC,WAAhB;;AACA,WAAeC,SAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE2BR,0BAA0B,CAACD,IAAD,EAAMK,KAAN,EAAaE,QAAb,CAFrD;;AAAA;AAAA;AAEaG,YAAAA,IAFb,yBAEaA,IAFb;;AAGQ,gBAAGA,IAAH,EAAQ;AACJP,cAAAA,UAAU,CAACQ,QAAX,CAAoB,MAApB;AACH;;AALT;AAAA;;AAAA;AAAA;AAAA;AAOQC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,KACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,OAAvB;AAA+B,IAAA,KAAK,EAAEH,MAAM,CAACI,KAA7C;AAAoD,IAAA,KAAK,EAAEb,KAA3D;AAAkE,IAAA,YAAY,EAAE,sBAACc,CAAD,EAAK;AAACb,MAAAA,QAAQ,CAACa,CAAD,CAAR;AAAY;AAAlG,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,KACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAkC,IAAA,eAAe,EAAE,IAAnD;AAAyD,IAAA,KAAK,EAAEN,MAAM,CAACI,KAAvE;AAA8E,IAAA,KAAK,EAAEX,QAArF;AAA+F,IAAA,YAAY,EAAE,sBAACY,CAAD,EAAK;AAACX,MAAAA,WAAW,CAACW,CAAD,CAAX;AAAe;AAAlI,IADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACO;AAApB,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEP,MAAM,CAACQ,YAAhC;AAA8C,IAAA,OAAO,EAAEb;AAAvD,KAAkE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACc,MAAAA,KAAK,EAAC;AAAP;AAAb,cAAlE,CADJ,CAPJ,CADA,CADJ;AAeH,CA/BD;;AAkCA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,KAAK,EAAG;AACJQ,IAAAA,KAAK,EAAC,GADF;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,WAAW,EAAE,CAJT;AAKJC,IAAAA,WAAW,EAAG,oBALV;AAMJC,IAAAA,OAAO,EAAE,EANL;AAOJC,IAAAA,YAAY,EAAG;AAPX,GADqB;AAW7BX,EAAAA,MAAM,EAAG;AACLK,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAG,EAFJ;AAGLJ,IAAAA,KAAK,EAAC;AAHD,GAXoB;AAgB7BR,EAAAA,SAAS,EAAG;AACRW,IAAAA,KAAK,EAAC,MADE;AAERC,IAAAA,MAAM,EAAC,MAFC;AAGRM,IAAAA,IAAI,EAAC,CAHG;AAIRC,IAAAA,cAAc,EAAG,QAJT;AAKRC,IAAAA,UAAU,EAAC;AALH;AAhBiB,CAAlB,CAAf;AAmFA,eAAejC,SAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { View , Text , StyleSheet ,TextInput , TouchableOpacity} from 'react-native';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\nimport { auth  ,signInWithEmailAndPassword} from '../../configs/firebase';\r\n\r\nconst MainLogin = ({navigation}) => {\r\n    let [fontsLoaded] = useFonts({\r\n        Inter_900Black,\r\n      });\r\n    let [email , setEmail] = useState('');\r\n    let [password , setPassword] = useState('');\r\n    async function loginFunc(){\r\n        try {\r\n            let {user} = await signInWithEmailAndPassword(auth,email ,password)\r\n            if(user){\r\n                navigation.navigate(\"home\")\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error : \" , error)\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={styles.cont1}>\r\n            <View style={styles.view1}>\r\n                <TextInput placeholder=\"Email\" style={styles.input} value={email} onChangeText={(e)=>{setEmail(e)}}  />\r\n            </View>\r\n            <View style={styles.view2}>\r\n                <TextInput placeholder=\"Password\" secureTextEntry={true} style={styles.input} value={password} onChangeText={(e)=>{setPassword(e)}}  />\r\n            </View>\r\n            <View style={styles.btnDiv}>\r\n                <TouchableOpacity style={styles.touchableBtn} onPress={loginFunc}><Text style={{color:\"white\"}}>Log in</Text></TouchableOpacity>\r\n            </View>\r\n        </View>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    input : {\r\n        width:250,\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        borderColor : 'rgb(195, 195, 195)',\r\n        padding: 10,\r\n        borderRadius : 5,\r\n\r\n    },\r\n    btnDiv : {\r\n        width: \"100%\",\r\n        height : 40,\r\n        color:'black'\r\n    },\r\n    container : {\r\n        width:\"100%\",\r\n        height:\"100%\",\r\n        flex:1,\r\n        justifyContent : 'center',\r\n        alignItems:'center',\r\n    }\r\n})\r\n\r\n// const styles = StyleSheet.create({\r\n//     view1 : {\r\n//         paddingTop : 10,\r\n//         backgroundColor : 'white',\r\n//         paddingLeft: 10,\r\n//         paddingRight:10,\r\n//         borderTopEndRadius:10,\r\n//         paddingBottom: 10,\r\n//         borderTopStartRadius:10,\r\n//     },\r\n//     view2 : {\r\n//         backgroundColor : 'white',\r\n//         paddingLeft: 10,\r\n//         paddingRight:10,\r\n//         // paddingTop:10,\r\n//         // paddingBottom:10,\r\n//     },\r\n\r\n//     input: {\r\n//       height: 40,\r\n//       margin: 12,\r\n//       borderWidth: 1,\r\n//       borderColor : 'rgb(195, 195, 195)',\r\n//       padding: 10,\r\n//       borderRadius : 5,\r\n\r\n//     //   backgroundColor : '#ffffff'\r\n//     },\r\n//     container :{\r\n//         flex:1,\r\n//         justifyContent : \"center\",\r\n//         alignItems : 'center',\r\n//         fontFamily : 'Inter_400Black',\r\n//         width : '100%',\r\n//         height : '100%',\r\n//         backgroundColor: \"#dedfe0\", \r\n//     },\r\n//     btnDiv : {\r\n//         // paddingTop:9,\r\n//         paddingLeft: 21,\r\n//         paddingRight : 21,\r\n//         paddingBottom : 25,\r\n//         backgroundColor : 'white',\r\n//         borderBottomEndRadius: 10,\r\n//         borderBottomStartRadius :10,\r\n//     },\r\n//     touchableBtn: {\r\n//         // height: '3rem',\r\n//         // width : '10rem'\r\n//         paddingTop: 10,\r\n//         paddingBottom : 10,\r\n//         paddingLeft : 90,\r\n//         backgroundColor : 'black',\r\n\r\n//         paddingRight: 90,\r\n//     }\r\n//   });\r\n\r\nexport default MainLogin;\r\n"]},"metadata":{},"sourceType":"module"}